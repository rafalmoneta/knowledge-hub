import type { GetServerSideProps, NextPage } from "next";
import { getServerSession } from "next-auth";
import { authOptions } from "@/server/auth";
import Head from "next/head";
import { Layout } from "@/components/layout";
import type { RouterOutputs } from "@/utils/api";
import { trpc } from "@/utils/api";
import Container from "@/components/container";
import { Avatar } from "@/components/avatar";
import { classNames } from "@/lib/classnames";
import { TechnologyTag } from "./profile/[id]";
import Link from "next/link";

const PersonCard = ({
  person,
}: {
  person: RouterOutputs["user"]["getAll"][number];
}) => {
  return (
    <Link href={`/profile/${person.id}`}>
      <div className="relative rounded-lg border p-4">
        <div className="flex items-center">
          <Avatar
            name={person.name || "Anonymous"}
            size="lg"
            src={person.image}
          />
          <div className="ml-8">
            <h1 className="text-2xl font-bold">{person.name}</h1>
            <p className="text-gray-500">{person.email}</p>
            <p className="text-gray-500">
              {person?.position ? person.position : "Position Not Specified"}
            </p>
            <div className="mt-4 flex flex-wrap gap-2">
              {person.skills.map((skill) => (
                <TechnologyTag
                  key={skill.id}
                  name={skill.technology.name}
                  expertise={skill.expertise}
                />
              ))}
            </div>
          </div>
        </div>
      </div>
    </Link>
  );
};

const PeoplePage: NextPage = () => {
  const peopleQuery = trpc.user.getAll.useQuery({});

  if (peopleQuery.isLoading) {
    return (
      <Layout>
        <Container>
          <h1 className="text-2xl font-bold tracking-tight md:text-3xl">
            Developers, Designers and Management
          </h1>
          <p className="mt-4 text-lg text-gray-500">
            This is a list of all the people who work at the company. In the
            future, you will be able to filter by role and technologies, other
            skills and more.
          </p>
          <p className="mt-4 text-lg text-gray-500">TODO: Add filtering</p>
          <div className="mt-8">
            <div className="animate-pulse">
              {/* eslint-disable-next-line @typescript-eslint/no-unsafe-assignment */}
              {[...Array(5)].map((_, index) => (
                <div
                  key={index}
                  className="relative mb-4 rounded-lg border p-4"
                >
                  {/* <div className="h-8 w-3/4 rounded bg-gray-200 dark:bg-gray-700" /> */}
                  <div
                    className={classNames(
                      "flex items-center justify-between gap-4"
                    )}
                  ></div>
                  <div className="flex items-center gap-4">
                    <div className="h-[128px] w-[128px] rounded-full bg-gray-200 dark:bg-gray-700" />
                    <div className="flex-1">
                      <div className="mb-2 h-8 w-64 rounded bg-gray-200 dark:bg-gray-700" />
                      <div className="mb-2 h-4 w-44 rounded bg-gray-200 dark:bg-gray-700" />
                      <div className="h-4 w-44 rounded bg-gray-200 dark:bg-gray-700" />
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </Container>
      </Layout>
    );
  }

  if (peopleQuery.isError) return <div>Error: {peopleQuery.error.message}</div>;
  if (peopleQuery.data === null) return <div>Not found</div>;

  return (
    <>
      <Head>
        <title>Knowledge Hub</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Container>
          <h1 className="text-2xl font-bold tracking-tight md:text-3xl">
            Developers, Designers and Management
          </h1>
          <p className="mt-4 text-lg text-gray-500">
            This is a list of all the people who work at the company. In the
            future, you will be able to filter by role and technologies, other
            skills and more.
          </p>
          <p className="mt-4 text-lg text-gray-500">TODO: Add filtering</p>
          <div className="mt-8">
            <ul>
              {peopleQuery.data.map((person) => (
                <li key={person.id}>
                  <PersonCard key={person.id} person={person} />
                </li>
              ))}
            </ul>
          </div>
        </Container>
      </Layout>
    </>
  );
};

export default PeoplePage;

export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
  const session = await getServerSession(req, res, authOptions);

  if (!session) {
    return {
      redirect: {
        destination: "/sign-in",
        permanent: false,
      },
    };
  }

  return {
    props: {
      session,
    },
  };
};
