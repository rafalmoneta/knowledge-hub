import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { getServerSession } from "next-auth";
import { authOptions } from "@/server/auth";
import { Layout } from "@/components/layout";
import { PostForm } from "@/features/post/post-form";
import { trpc } from "@/utils/api";
import { useRouter } from "next/router";
import Container from "@/components/container";

const NewPostPage: NextPage = () => {
  const router = useRouter();
  const addPostMutation = trpc.post.add.useMutation({
    async onSuccess(data) {
      await router.push(`/post/${data.id}`);
    },
  });

  return (
    <>
      <Head>
        <title>New Post</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Container>
          <h1 className="mb-16 text-2xl font-bold tracking-tight md:text-3xl">
            Creating a new post
          </h1>

          <div className="mt-6">
            <PostForm
              isSubmitting={addPostMutation.isLoading}
              defaultValues={{
                title: "",
                content: "",
              }}
              backTo="/"
              onSubmit={(values) =>
                addPostMutation.mutate({
                  title: values.title,
                  content: values.content,
                })
              }
            />
          </div>
        </Container>
      </Layout>
    </>
  );
};

export default NewPostPage;

export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
  const session = await getServerSession(req, res, authOptions);

  if (!session) {
    return {
      redirect: {
        destination: "/sign-in",
        permanent: false,
      },
    };
  }

  return {
    props: {
      session,
    },
  };
};
